name: Install pmbootstrap
on:
    push:
        branches:
            - main

jobs:
    build:
        strategy:
            matrix:
                include:
                    - device: pinephone
                      vendor: pine64
                      packages: chatty,firefox-esr,gnome-software
                    - device: pinephonepro
                      vendor: pine64
                      packages: chatty,firefox-esr,gnome-software
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Install pmbootstrap
              run: |
                    sudo apt-get update
                    #sudo apt-get install -y python3-pip
                    #sudo apt-get install -y pmbootstrap
                    sudo apt-get install -y build-essential python3 git
                    git clone https://gitlab.com/postmarketOS/pmbootstrap.git
                    mkdir -p ~/.local/bin
                    ln -s "$PWD/pmbootstrap/pmbootstrap.py" ~/.local/bin/pmbootstrap
                    pmbootstrap --version
                    #mkdir -p ~/.local/var/pmbootstrap/cache_git
                    cd ../..
                    printf '.local/var/pmbootstrap\nedge\n${{ matrix.vendor }}\n${{ matrix.device }}\nuser\ndefault\ngnome-mobile\n\n${{ matrix.packages }}\nn\nen_US\n${{ matrix.vendor }}-${{ matrix.device }}\ny\n123456\n123456' | pmbootstrap init
                    cd .local/var/pmbootstrap/cache_git/pmaports
                    git checkout feature/lomiri
                    printf '\nedge\n${{ matrix.vendor }}\n${{ matrix.device }}\nuser\ndefault\nlomiri\n\n${{ matrix.packages }}\nn\nen_US\n${{ matrix.vendor }}-${{ matrix.device }}\ny\ny' | pmbootstrap init
                    printf '123456\n123456' | pmbootstrap install
            - name: Compress Image
              run: |
                sudo cp /home/runner/work/.local/var/pmbootstrap/*/home/pmos/rootfs/${{ matrix.vendor }}-${{ matrix.device }}.img /home/runner/work/${{ matrix.vendor }}-${{ matrix.device }}.img
                sudo xz -z9e /home/runner/work/${{ matrix.vendor }}-${{ matrix.device }}.img
                ls
                #cd ../..
                #file_path=$(sudo find . -name *.img)
                #sudo xz -z6 ../..$file_path
                #mv $file_path.xz ./${{ matrix.vendor }}-${{ matrix.device }}.img.xz

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ github.ref }}
                release_name: Release ${{ github.ref }}
                body: |
                  Compressed Image for ${{ matrix.vendor }}-${{ matrix.device }}
                draft: true
                prerelease: false

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: /home/runner/work/${{ matrix.vendor }}-${{ matrix.device }}.img.xz
                asset_name: ${{ matrix.vendor }}-${{ matrix.device }}.img.xz
                asset_content_type: application/x-xz
            - name: Upload Compressed Image
              uses: actions/upload-artifact@v3
              with:
                name: Compressed Image
                path: /home/runner/work/${{ matrix.vendor }}-${{ matrix.device }}.img.xz